#include <fstream>
#include <stack>
std::string nume="nrapp";
std::ifstream fin(nume+".in");
std::ofstream fout(nume+".out");
std::stack<unsigned int>stiv;
unsigned int d[100001];
int main()
{
    unsigned int v[100001];
    unsigned int s[100001];
    int n;
    fin>>n;
    for(int i=1;i<=n;i++)
    {
        fin>>v[i];
    }
    for(int i=1;i<=n;++i)
    {
        while(!stiv.empty()&&v[i]<v[stiv.top()])
        {
            d[stiv.top()]=i;
            stiv.pop();
        }
        stiv.push(i);
    }
    while(!stiv.empty())
    {
        stiv.pop();
    }
    for(int i=1;i<=n;++i)
    {
        while(!stiv.empty()&&v[i]<=v[stiv.top()])
        {
            stiv.pop();
        }
        if(!stiv.empty())
        {
            s[i]=stiv.top();
        }
        else
        {
            s[i]=0;
        }
        stiv.push(i);
    }
    int q;
    fin>>q;
    for(int i=0;i<q;i++)
    {
        char c;
        int x;
        fin>>c>>x;
        if(c=='D')
        {
            if(d[x]!=0)
            fout<<d[x]<<'\n';
            else
            fout<<n+1<<'\n';
        }
        if(c=='S')
        {
            fout<<s[x]<<'\n';
        }
    }
    return 0;
}
/*
d  next smaller element
s  previous smaller element
8
1 3 6 5 2 1 9 6
*/
